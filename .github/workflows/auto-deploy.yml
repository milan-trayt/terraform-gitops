name: Auto Deploy Infrastructure

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  pull-requests: write
  repository-projects: read
  packages: read
  pages: write
  checks: write
  actions: read

env:
  AWS_REGION: 'us-east-1'

jobs:
  check_changes:
    name: Check for .tf file changes
    runs-on: ubuntu-latest
    outputs:
      tf_changed: ${{ steps.check.outputs.tf_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check if .tf files are changed
        id: check
        run: |
          if git diff --name-only ${{github.event.before}} ${{github.sha}} | grep -q '\.tf$'; then
            echo "::set-output name=tf_changed::true"
          else
            echo "::set-output name=tf_changed::false"
          fi

  apply:
    name: Apply changes automatically to lower environments
    runs-on: ubuntu-latest
    needs: check_changes
    if: needs.check_changes.outputs.tf_changed == 'true'
    strategy:
      fail-fast: false
      matrix:
        environment: [dev]
    steps:
      - name: Set environment vars
        shell: bash
        run: |
          if [[ ${{matrix.environment}} == 'dev' ]]; then
              echo "AWS_ROLE=arn:aws:iam::949263681218:role/milan-training-terraform-github-action-write-role-dev" >> $GITHUB_ENV
              echo "ENV=dev" >> $GITHUB_ENV
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.1
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-duration-seconds: 3600
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Add github safe dir
        run: git config --global --add safe.directory /__w/terraform-gitops/terraform-gitops

      - name: Init Terraform
        run: |
          cd environments/${{matrix.environment}}
          terraform init

      - name: Apply Terraform
        run: |
          cd environments/${{matrix.environment}}
          terraform apply --auto-approve
